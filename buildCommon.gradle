//配置文件
def moduleConfig = moduleCfg(project.name)
ext.enKtx = moduleConfig.enKtx ? moduleConfig.enKtx : false
ext.enX = moduleConfig.enX ? moduleConfig.enX : false
ext.enDatabinding = moduleConfig.enDatabinding ? moduleConfig.enDatabinding : false
ext.enLog = moduleConfig.enLog ? moduleConfig.enLog : false

apply from: "${rootDir.path}/config.gradle"
GLog.debugSwitch = enLog
GLog.d("younger__buildCommon__build__Config__enKtx: ${enKtx}, enX: ${enX}, enDatabinding: ${enDatabinding}, enLog: ${enLog}")

def pluginDeps = modulePlugin()
GLog.d("younger__buildCommon__build__pluginDeps: ${pluginDeps}")
def kaptFlag = false
if (pluginDeps && pluginDeps.size() > 0) {
    pluginDeps.forEach {
        if (it) {
            if (it.startsWithAny("plugin__")) {
                apply plugin: it.replaceAll("plugin__", "")
            } else if (!kaptFlag && it.startsWithAny("kapt__")) {
                kaptFlag = true
            }
        }
    }
    if (kaptFlag) {
        apply plugin: "kotlin-kapt"
    }
}


android {
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        minSdkVersion versions.minSdkVersion
        consumerProguardFiles 'proguard-rules.pro'
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    if (enKtx) {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    if (enDatabinding) {
        buildFeatures.dataBinding = true
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    addLibs(dependencies, pluginDeps)
}